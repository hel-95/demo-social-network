{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/Profile.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","classes","item","src","message","likes","maxLength10","maxLengthCreator","Textarea","FormControl","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","required","name","MyPosts","console","log","postsElement","posts","map","post","index","key","newPost","values","addPost","postText","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","icon","photos","large","userPhoto","container","fullName","aboutMe","job","lookingForAJob","lookingForAJobDescription","social","contacts","facebook","href","class","github","instagram","twitter","vk","youtube","mainLink","website","Preloader","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8014a9c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2bKJV\",\"container\":\"ProfileInfo_container__TgtjC\",\"fullName\":\"ProfileInfo_fullName__2ME-r\",\"icon\":\"ProfileInfo_icon__2wn8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2LnEi\",\"content__image\":\"Profile_content__image__2g6oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__3SLMt\",\"posts\":\"MyPosts_posts__1P0sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\"};","import React from 'react'\nimport classes from './Post.module.scss'\n\nconst Post = props => {\n    return (\n        <div className={classes.item}>\n            <img src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fimg-aws.ehowcdn.com%2F200x200%2Fcme%2Fcme_public_images%2Fwww_ehow_com%2Fi.ehow.com%2Fimages%2Fa07%2F0i%2Ffm%2Fcare-yellow_headed-amazon-parrot-800x800.jpg&f=1&nofb=1\"/>\n             { props.message }\n             <span>Like {props.likes}</span>\n             \n        </div>\n    )\n}\n\nexport default Post;","import React from 'react'\nimport classes from './MyPosts.module.scss'\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\nimport { FormControl } from '../../common/FormsControls/FormsControls'\n\n\nconst MyPosts = props => {\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return nextProps != this.props || nextState != this.state;\n    // }\n        \n    console.log('RENDER');\n    let postsElement = props.posts.map((post, index) => {\n        return (\n            <Post \n                key={index}\n                message={post.message} \n                likes={post.likes}\n            />\n        )\n    });\n\n    \n    const onAddPost = (values) => {\n       props.addPost(values.postText);\n    }\n    \n    return (\n           <div className={classes.MyPosts}>\n            <h3>My posts</h3>\n                <div className={classes.newPost}>\n                    <PostReduxForm onSubmit={onAddPost}/>\n                </div>\n                <div className={classes.posts}>\n                    { postsElement }\n                </div>\n            </div>\n    )\n\n}\n\nconst maxLength10 = maxLengthCreator(10);\nconst Textarea = FormControl('textarea');\n\nconst PostForm = props => {\n    \n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Enter your text'} component={Textarea}\n                validate={[required, maxLength10]} name={\"postText\"} />\n            </div>\n            <div>\n            <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({\n    form: 'addPostForm'\n})(PostForm);\n\nexport default MyPosts;","import React from 'react';\nimport classes from './ProfileInfo.module.scss';\nimport {profileAPI} from '../../api/api';\n\nclass ProfileStatus extends React.Component {\n        \n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    }\n\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.props.updateStatus(this.state.status);\n    }\n\n    componentDidUpdate(prevProps, prevState)  {\n        if(prevProps.status !== this.props.status){\n            this.setState({status: this.props.status})\n        }\n        let a = this.state;\n        let b = this.props;\n           //console.log('componentDidUpdate');\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n          \n    }\n   \n\n    render() {\n        //console.log('render');\n       return (\n        <div>\n            { !this.state.editMode && \n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>\n                </div>\n            }\n            { this.state.editMode && \n                <div>\n                    <input onChange={this.onStatusChange} autoFocus={true} \n                    onBlur={this.deactivateEditMode} value={this.state.status} />\n                </div>\n            }\n        </div>\n    )\n    }\n}\n\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\nimport classes from './ProfileInfo.module.scss';\nimport {profileAPI} from '../../api/api';\n\nconst ProfileStatusWithHooks = (props) => {\n    \n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\n                </div>\n            }\n            { editMode && \n                <div>\n                    <input autoFocus={true} onBlur={deactivateEditMode}\n                      value={status} onChange={onStatusChange}/>\n                </div>\n            }\n        </div>\n    )\n    \n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport classes from './ProfileInfo.module.scss';\nimport userPhoto from '../../../assets/images/samurai.png';\nimport ProfileStatus from './ProfileStatus'\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, updateStatus, status, ...props}) => {\n  if(!profile) {\n    return <Preloader />\n  }\n    return (\n        <div className={classes.profile}>\n          <div>\n          <img className={classes.icon} src={profile.photos.large != null \n          ? profile.photos.large : userPhoto} />\n          </div>\n          \n          <div className={classes.container}>\n          <span className={classes.fullName}>{profile.fullName}</span>\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n          <p>{profile.aboutMe}</p>\n          \n          <div className={classes.job}>\n              <span>{profile.lookingForAJob}</span>\n              <span>{profile.lookingForAJobDescription}</span>\n          </div>\n          <div className={classes.social}>\n            {profile.contacts.facebook && <a href={profile.contacts.facebook}><i class=\"fab fa-facebook-square\"></i></a>}\n            {profile.contacts.github && <a href={profile.contacts.github}><i class=\"fab fa-github-square\"></i></a>}\n            {profile.contacts.instagram && <a href={profile.contacts.instagram}><i class=\"fab fa-instagram-square\"></i></a>}\n            {profile.contacts.twitter && <a href={profile.contacts.twitter}><i class=\"fab fa-twitter-square\"></i></a>}\n            {profile.contacts.vk && <a href={profile.contacts.vk}><i class=\"fab fa-vk\"></i></a>}\n            \n            {profile.contacts.youtube && <a href={profile.contacts.youtube}><i class=\"fab fa-youtube\"></i></a>}\n            {profile.contacts.mainLink && <a href={profile.contacts.mainLink}><i class=\"fas fa-mouse-pointer\"></i></a>}\n            {profile.contacts.website && <a href={profile.contacts.website}><i class=\"fab fa-blogger\"></i></a>}\n          </div>\n          </div>\n          \n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react'\nimport {addPostActionCreator} from '../../../redux/profileReducer'\nimport MyPosts from './MyPosts'\nimport {connect} from 'react-redux'\n\n// const MyPostsContainer = () => {\n\n//     return <StoreContext.Consumer>\n//              { (store) => {\n//          let addPost = () => {\n//             store.dispatch(addPostActionCreator());\n//          }\n    \n//         let onPostChange = (text) => {\n//             store.dispatch(updateNewPostTextActionCreator(text));\n//         }\n        \n//           return  <MyPosts updateNewPostText={onPostChange} addPost={addPost} \n//                     posts={store.getState().profilePage.posts}\n//                     newPostText={store.getState().profilePage.newPostText}/> \n// }} \n// </StoreContext.Consumer>          \n   \n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (postText) => {\n            dispatch(addPostActionCreator(postText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react'\nimport classes from './Profile.module.scss'\nimport MyPosts from './MyPosts/MyPosts'\nimport ProfileInfo from'./ProfileInfo/ProfileInfo'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport Preloader from '../common/Preloader/Preloader';\n\n\nconst Profile = (props) => {\n \n  if(!props.profile) {\n    return <Preloader />\n  }\n\n      return(\n          <div className={classes.content}>\n          <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n          <MyPostsContainer />     \n         \n      </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport {getUserProfile, getUserStatus, updateStatus} from '../../redux/profileReducer';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId = this.props.authorizedUserId;\n            if(!userId) {\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getUserStatus(userId);\n        \n    }\n\n    render() {\n        \n        return(\n            <Profile {...this.props} profile={this.props.profile} \n                status={this.props.status} updateStatus={this.props.updateStatus}/>\n        )\n    }\n      \n}\n\nlet mapStateToProps = state => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.id, \n        isAuth: state.auth.isAuth\n    })\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\n    withRouter\n   // withAuthRedirect\n)(ProfileContainer);\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n \n\n\n\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}