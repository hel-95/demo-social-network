{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","src","image","name","Message","message","maxLength100","maxLengthCreator","Textarea","FormControl","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Dialogs","dialogsElement","messagesPage","dialogs","map","index","key","messagesElement","messages","dialogsItems","values","sendMessage","newMessageBody","compose","connect","state","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,oBCA9ID,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,wGCgBbC,EAbI,SAAAC,GACf,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAE3C,kBAAC,IAAD,CAASC,GAAIN,GACT,yBAAKO,IAAKR,EAAMS,QAChB,8BAAOT,EAAMU,S,kBCCdC,EATC,SAAAX,GACZ,OACI,yBAAKG,UAAWC,IAAQQ,SACnBZ,EAAMY,U,0CCAbC,EAAeC,YAAiB,KAChCC,EAAWC,YAAY,YAiBbC,cAAU,CACtBC,KAAM,wBADMD,EAdO,SAAAjB,GACnB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWP,EAAUL,KAAM,iBAClCa,SAAU,CAACC,IAAUX,GAAeY,YAAa,wBAErD,6BACI,6CCwCDC,EAlDC,SAAA1B,GAEZ,IAAI2B,EAAiB3B,EAAM4B,aAAaC,QAAQC,KAAI,SAACzB,EAAQ0B,GACzD,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLrB,KAAML,EAAOK,KACbR,GAAIG,EAAOH,GACXO,MAAOJ,EAAOI,WAM1BwB,EAAkBjC,EAAM4B,aAAaM,SAASJ,KAAI,SAAClB,EAASmB,GAC5D,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLnB,QAASA,EAAQA,aAWzB,OACI,yBAAKT,UAAWC,IAAQyB,SACpB,yBAAK1B,UAAWC,IAAQ+B,cAClBR,GAEN,yBAAKxB,UAAWC,IAAQ8B,UAClBD,EAGF,kBAAC,EAAD,CAAgBd,SAbZ,SAACiB,GAClBpC,EAAMqC,YAAYD,EAAOE,sB,wBCLbC,sBACXC,aAlBkB,SAACC,GACnB,MAAO,CACHb,aAAca,EAAMb,gBAgBC,CAACS,kBAC1BK,IAFWH,CAGbb","file":"static/js/4.7ea1a40a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"active\":\"Dialogs_active__3lrrn\",\"messages\":\"Dialogs_messages__1J3nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3yh_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\"};","import React from 'react'\nimport classes from './DialogItem.module.scss'\nimport {NavLink} from 'react-router-dom'\n\nconst DialogItem = props => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={classes.dialog + ' ' + classes.active}>\n            \n            <NavLink to={path} >\n                <img src={props.image}/>\n                <span>{props.name}</span>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react'\nimport classes from './Message.module.scss'\n\nconst Message = props => {\n    return (\n        <div className={classes.message}>\n            {props.message}\n        </div> \n            \n    )\n}\n\nexport default Message;","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { FormControl } from '../../common/FormsControls/FormsControls';\n\n\nconst maxLength100 = maxLengthCreator(100);\nconst Textarea = FormControl('textarea');\n\n\nconst AddMessageForm = props => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name={'newMessageBody'}\n                validate={[required, maxLength100]} placeholder={'Enter your message'}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n export default reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\n","import React from 'react'\nimport classes from './Dialogs.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\n\n\nconst Dialogs = props => {\n  \n    let dialogsElement = props.messagesPage.dialogs.map((dialog, index) => {\n        return (\n            <DialogItem  \n                key={index}\n                name={dialog.name} \n                id={dialog.id}\n                image={dialog.image}\n            /> \n        )\n    });\n\n\nlet messagesElement = props.messagesPage.messages.map((message, index) => {\n    return (\n        <Message \n            key={index}\n            message={message.message} \n        />\n    )\n});\n\n\n\nlet addNewMessage = (values) => {\n   props.sendMessage(values.newMessageBody);\n}\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                { dialogsElement }\n            </div>\n            <div className={classes.messages}>\n                { messagesElement }\n                \n                \n                <AddMessageForm onSubmit={addNewMessage}/>\n                \n                    \n                </div>\n                \n            </div>\n      \n    )\n}\n\n\n\nexport default Dialogs;","import React from 'react'\nimport classes from './Dialogs.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport {sendMessage} from '../../redux/dialogsReducer'\nimport Dialogs from './Dialogs'\nimport {connect} from 'react-redux'\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         sendMessage: (newMessageBody) => {\n//             dispatch(sendMessageActionCreator(newMessageBody));\n//         },\n//         updateNewMessageText: (text) => {\n//             dispatch(updateNewMessageTextActionCreator(text));\n//         }\n//     }\n// }\n\nexport default compose(\n    connect(mapStateToProps, {sendMessage}),\n    withAuthRedirect\n)(Dialogs);\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n// const DialogsContainer = connect(mapStateToProps, {sendMessage, updateNewMessageText})(AuthRedirectComponent);\n"],"sourceRoot":""}