{"version":3,"sources":["assets/images/samurai.png","components/Navbar/Navbar.module.scss","redux/dialogsReducer.js","assets/images/friend.png","assets/images/preloader.svg","hoc/withAuthRedirect.js","components/api/api.js","components/Header/Header.js","redux/authReducer.js","components/Header/HeaderContainer.js","components/News/News.js","components/Music/Music.js","components/Navbar/Friends/Friends.js","components/Navbar/Navbar.js","components/Navbar/NavbarContainer.js","utils/object-helper.js","redux/usersReducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users.selectors.js","components/Users/UsersContainer.js","components/Login/Login.js","redux/appReducer.js","redux/sidebarReducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/Users/Users.module.scss","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.scss","components/Navbar/Friends/Friends.module.scss","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.scss","redux/profileReducer.js"],"names":["module","exports","initialState","dialogs","id","name","image","messages","message","sendMessage","newMessageBody","type","dialogsReducer","state","action","newMessage","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","delete","follow","post","profileAPI","getProfile","getStatus","userId","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Header","className","classes","header","src","loginBlock","onClick","SET_USER_DATA","isFetching","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","News","Music","Friends","path","friend","friendItem","icon","Navbar","friendsElement","friends","map","index","key","nav","item","activeClassName","active","friendBlock","friendsList","NavbarContainer","sidebar","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","followingInProcess","followSuccess","unfollowSuccess","setCurrentPage","setToggleIsFetching","toggleFollowingProcess","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","cn","selectedPage","pageNumber","e","User","user","size","photos","small","userPhoto","photo","buttonContainer","disabled","some","Users","container","usergrid","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProcess","UsersContainer","requestUsers","Preloader","compose","bind","page","totalCount","Input","FormControl","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","render","AppContainer","withRouter","SamuraiJSApp","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","Element","input","meta","touched","hasError","formControl","placeholder","validators","component","text","validate","value","undefined","maxLengthCreator","maxLength","posts","likes","profile","addPostActionCreator","postText","setStatus","getUserProfile","getUserStatus","newPost","postId"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,qC,mBCC3CD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,YAAc,4BAA4B,YAAc,4BAA4B,OAAS,yB,sFCGjMC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,SAAUC,MAAO,2IAC/B,CAACF,GAAI,EAAGC,KAAM,QAAQC,MAAO,2IAC7B,CAACF,GAAI,EAAGC,KAAM,OAAOC,MAAO,2IAC5B,CAACF,GAAI,EAAGC,KAAM,UAAUC,MAAO,2IAC/B,CAACF,GAAI,EAAGC,KAAM,QAAQC,MAAO,2IAC7B,CAACF,GAAI,EAAGC,KAAM,OAAQC,MAAO,4IAEjCC,SAAU,CACN,CAACH,GAAI,EAAGI,QAAS,MACjB,CAACJ,GAAI,EAAGI,QAAS,mBACjB,CAACJ,GAAI,EAAGI,QAAS,QAyBZC,EAAc,SAACC,GAAD,MAAqB,CAAEC,KAzC7B,eAyCiDD,mBAIvDE,IAxBQ,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCAErD,OAAOA,EAAOH,MACV,IAxBa,eAyBL,IAAII,EAAa,CACbX,GAAI,EACJI,QAASM,EAAOJ,gBAEpB,OAAO,eACAG,EADP,CAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsBQ,MAG1C,QACQ,OAAOF,K,oBCnCvBb,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,+ICKvCe,EAA6B,SAAAH,GAAK,MAAK,CACvCI,OAAQJ,EAAMK,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKC,MAAMN,OAChB,kBAACG,EAAcE,KAAKC,OADW,kBAAC,IAAD,CAAUC,GAAI,eAHT,GACXC,IAAML,WAStC,OAFsCM,YAAQV,EAARU,CAAoCL,K,gCClB9E,mHAGMM,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IACtDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG/BC,SANoB,SAMXpC,GACL,OAAOuB,EAASc,OAAT,iBAA0BrC,IAChCiC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BG,OAVoB,SAUbtC,GACH,OAAOuB,EAASgB,KAAT,iBAAwBvC,IAC9BiC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAOtBK,EAAa,CACtBC,WADsB,SACXzC,GACP,OAAOuB,EAASS,IAAT,kBAAwBhC,IAC9BiC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BO,UALsB,SAKZC,GACN,OAAOpB,EAASS,IAAT,yBAA+BW,KAE1CC,aARsB,SAQTC,GACT,OAAOtB,EAASuB,IAAT,iBAA+B,CAAED,OAAQA,MAO3CE,EAAU,CACnBC,GADmB,WAEf,OAAOzB,EAASS,IAAT,WACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/Bc,MALmB,SAKbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO7B,EAASgB,KAAT,aAA4B,CAAEW,QAAOC,WAAUC,gBAE1DC,OARmB,WASf,OAAO9B,EAASc,OAAT,iB,sSCtCAiB,EAbA,SAACnC,GACZ,OACI,4BAAQoC,UAAWC,IAAQC,QACvB,yBAAKC,IAAI,mLACb,yBAAKH,UAAWC,IAAQG,YAClBxC,EAAMN,OACN,6BAAMM,EAAM8B,MAAZ,MAAqB,4BAAQW,QAASzC,EAAMkC,QAAvB,YACpB,kBAAC,IAAD,CAASjC,GAAI,UAAb,Y,+CCPTyC,EAAgB,0CAGlB/D,EAAe,CACXE,GAAI,KACJkD,MAAO,KACPD,MAAO,KACPa,YAAY,EACZjD,QAAQ,GAmBHkD,EAAkB,SAAC/D,EAAIkD,EAAOD,EAAOpC,GAAnB,MAA+B,CAAEN,KAAMsD,EAAeG,QAC5E,CAAEhE,KAAIkD,QAAOD,QAAOpC,YAEhBoD,EAAkB,yDAAM,WAAMC,GAAN,uBAAAC,EAAA,sEAERpB,IAAQC,KAFA,OAGM,KAD/Bd,EAFyB,QAGTkC,aAAmB,EACElC,EAASC,KAA7BnC,EADiB,EACjBA,GAAIkD,EADa,EACbA,MAAOD,EADM,EACNA,MAChBiB,EAASH,EAAgB/D,EAAIkD,EAAOD,GAAO,KAL9B,2CAAN,uDAgChBoB,EAnDM,WAAmC,IAAlC5D,EAAiC,uDAAzBX,EAAcY,EAAW,uCACnD,OAAOA,EAAOH,MACV,KAAKsD,EACG,OAAO,eACIpD,EADX,GAEWC,EAAOsD,SAI1B,QACQ,OAAOvD,ICjBjB6D,E,iLAKE,OACI,kBAAC,EAAWpD,KAAKC,W,GANCE,IAAML,WAmBrBM,eARS,SAAAb,GACpB,MAAO,CACHI,OAAQJ,EAAMK,KAAKD,OACnBoC,MAAOxC,EAAMK,KAAKmC,SAKc,CAAEI,OD+BpB,yDAAM,WAAMa,GAAN,SAAAC,EAAA,sEACCpB,IAAQM,SADT,OAEoB,IAFpB,OAEAlB,KAAKiC,YACTF,EAASH,EAAgB,KAAM,KAAM,MAAM,IAHvC,2CAAN,wDC/BPzC,CAAqCgD,GChBrCC,G,OARF,WACT,OACI,uCCMOC,G,OARD,WACV,OACI,wC,4DCYOC,EAZC,SAAAtD,GACZ,IAAIuD,EAAO,YAAcvD,EAAMnB,GAC/B,OACI,yBAAKuD,UAAWC,IAAQmB,QAExB,kBAAC,IAAD,CAASvD,GAAIsD,EAAMnB,UAAWC,IAAQoB,YAClC,yBAAKrB,UAAWC,IAAQqB,KAAMnB,IAAKiB,MACnC,8BAAOxD,EAAMlB,SC4BV6E,EAlCA,SAAA3D,GAEb,IAAI4D,EAAiB5D,EAAM6D,QAAQC,KAAI,SAACN,EAAQO,GAC9C,OACE,kBAAC,EAAD,CACCC,IAAKD,EACLlF,GAAI2E,EAAO3E,GACXE,MAAOyE,EAAOzE,MACdD,KAAM0E,EAAO1E,UAMhB,OACI,6BACE,yBAAKsD,UAAWC,IAAQ4B,KACtB,kBAAC,IAAD,CAAS7B,UAAWC,IAAQ6B,KAAMC,gBAAiB9B,IAAQ+B,OAAQnE,GAAG,YAAW,uBAAGmC,UAAU,gBAA9F,WACA,kBAAC,IAAD,CAASA,UAAWC,IAAQ6B,KAAMC,gBAAiB9B,IAAQ+B,OAAQnE,GAAG,YAAW,uBAAGmC,UAAU,oBAA9F,YACA,kBAAC,IAAD,CAASA,UAAWC,IAAQ6B,KAAMC,gBAAiB9B,IAAQ+B,OAAQnE,GAAG,UAAS,uBAAGmC,UAAU,wBAA5F,SACA,kBAAC,IAAD,CAASA,UAAWC,IAAQ6B,KAAMC,gBAAiB9B,IAAQ+B,OAAQnE,GAAG,SAAQ,uBAAGmC,UAAU,eAA3F,QACA,kBAAC,IAAD,CAASA,UAAWC,IAAQ6B,KAAMC,gBAAiB9B,IAAQ+B,OAAQnE,GAAG,WAAU,uBAAGmC,UAAU,iBAA7F,SACA,kBAAC,IAAD,CAASA,UAAWC,IAAQ6B,KAAMC,gBAAiB9B,IAAQ+B,OAAQnE,GAAG,aAAY,uBAAGmC,UAAU,eAA/F,YACD,yBAAKA,UAAWC,IAAQgC,aACxB,wBAAIjC,UAAWC,IAAQC,QAAvB,WACC,yBAAKF,UAAWC,IAAQiC,aACpBV,OCLDW,EAFSpE,aAVF,SAACb,GACf,MAAO,CACFuE,QAASvE,EAAMkF,QAAQX,YAIX,SAACd,GAClB,MAAO,KAGS5C,CAA6CwD,G,QCzBxDc,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMZ,KAAI,SAAAgB,GACjB,OAAGA,EAAEF,KAAiBD,EACX,eAAIG,EAAX,GAAiBD,GAEdC,MCOPnG,EAAe,CACfoG,MAAO,GACPnE,SAAU,GACVoE,gBAAiB,EACjBrE,YAAa,EACbgC,YAAY,EACZsC,mBAAoB,IAgDXC,EAAgB,SAAC1D,GAAD,MAAa,CAAEpC,KA/D7B,SA+D2CoC,WAC7C2D,EAAkB,SAAC3D,GAAD,MAAa,CAAEpC,KA/D7B,WA+D6CoC,WAEjD4D,EAAiB,SAACzE,GAAD,MAAkB,CAAEvB,KA/DzB,mBA+DiDuB,gBAE7D0E,EAAsB,SAAC1C,GAAD,MAAiB,CAAEvD,KA/D3B,qBA+DqDuD,eACnE2C,EAAyB,SAAC3C,EAAWnB,GAAZ,MAAwB,CAAEpC,KA/D5B,8BA+D+DuD,aAAWnB,WAaxG+D,EAAkB,uCAAG,WAAMxC,EAAUvB,EAAQgE,EAAWC,GAAnC,SAAAzC,EAAA,6DACvBD,EAASuC,GAAuB,EAAM9D,IADf,SAENgE,EAAUhE,GAFJ,OAGE,IAHF,OAGbyB,YACLF,EAAS0C,EAAcjE,IAE3BuB,EAASuC,GAAuB,EAAO9D,IANjB,2CAAH,4DAmBTkE,EAlFM,WAAmC,IAAlCpG,EAAiC,uDAAzBX,EAAcY,EAAW,uCACnD,OAAOA,EAAOH,MACV,IArBO,SAsBJ,sBACQE,EADR,CAEKyF,MAAON,EAAoBnF,EAAMyF,MAAOxF,EAAOiC,OAAQ,KAAM,CAACmE,UAAU,MAQhF,IA/BS,WAgCL,OAAO,eACArG,EADP,CAEIyF,MAAON,EAAoBnF,EAAMyF,MAAOxF,EAAOiC,OAAQ,KAAM,CAACmE,UAAU,MAEhF,IAnCU,YAoCN,OAAO,eAAIrG,EAAX,CAAkByF,MAAM,YAAKxF,EAAOwF,SAExC,IArCiB,mBAsCb,OAAO,eAAIzF,EAAX,CAAkBqB,YAAapB,EAAOoB,cAE1C,IAvCsB,wBAwClB,OAAO,eAAIrB,EAAX,CAAkB0F,gBAAiBzF,EAAOyF,kBAG9C,IA1CmB,qBA2Cf,OAAO,eAAI1F,EAAX,CAAkBqD,WAAYpD,EAAOoD,aAEzC,IA5C4B,8BA6CxB,OAAO,eAAIrD,EAAX,CAAkB2F,mBAAoB1F,EAAOoD,WAAP,sBAC5BrD,EAAM2F,oBADsB,CACF1F,EAAOiC,SACrC,CAAClC,EAAM2F,mBAAmBW,QAAO,SAAA/G,GAAE,OAAIA,GAAMU,EAAOiC,aAI9D,QACI,OAAOlC,I,sFClBJuG,GAvCC,SAAC,GAKb,IAL4F,IAA9EC,EAA6E,EAA7EA,gBAAiBlF,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAaoF,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAaC,KAAKC,KAAKL,EAAkBlF,GAEzCwF,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATiD,EAUnDQ,mBAAS,GAV0C,oBAUtFC,EAVsF,KAUvEC,EAVuE,KAWvFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAG7C,OACA,yBAAK5D,UAAWC,KAAQwE,WAClBJ,EAAgB,GAClB,4BAAQhE,QAAS,WAAQiE,EAAiBD,EAAgB,KAA1D,QAEKL,EACIR,QAAO,SAAAkB,GAAC,OAAIA,GAAKH,GAAyBG,GAAGF,KAC7C9C,KAAI,SAACgD,GACN,OAAO,0BAAM1E,UAAY2E,KAAG,gBACvB1E,KAAQ2E,aAAerG,IAAgBmG,GACzCzE,KAAQ4E,YACEjD,IAAK8C,EACLrE,QAAS,SAACyE,GACNnB,EAAce,KACdA,MAEvBP,EAAeE,GACb,4BAAQhE,QAAS,WAAQiE,EAAiBD,EAAgB,KAA1D,U,qBCOGU,GAnCF,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAMnC,EAA0C,EAA1CA,mBAAoBhE,EAAsB,EAAtBA,SAAUE,EAAY,EAAZA,OAEhD,OACC,yBAAKiB,UAAWC,KAAQ+E,MAGJ,kBAAC,IAAD,CAASnH,GAAI,YAAcmH,EAAKvI,GAAIuD,UAAWC,KAAQgF,MACvD,yBAAK9E,IAA0B,MAArB6E,EAAKE,OAAOC,MAAgBH,EAAKE,OAAOC,MAAQC,KAC1DpF,UAAWC,KAAQoF,SAGnB,8BAAOL,EAAKtI,MACZ,8BAAOsI,EAAK1F,QAEZ,6BAAK,uBAAGU,UAAU,iBAAoB,qBAAtC,KAA8D,mBAG9D,yBAAKA,UAAWC,KAAQqF,iBAClCN,EAAKzB,SACJ,4BAAQgC,SAAU1C,EAAmB2C,MAAK,SAAA/I,GAAE,OAAIA,IAAOuI,EAAKvI,MAC/D4D,QAAS,WAAOxB,EAASmG,EAAKvI,MAD3B,UAIA,4BAAQ8I,SAAU1C,EAAmB2C,MAAK,SAAA/I,GAAE,OAAIA,IAAOuI,EAAKvI,MAC/D4D,QAAS,WAAOtB,EAAOiG,EAAKvI,MADzB,eCNAgJ,GAlBD,SAAC,GAA8E,IAA7ElH,EAA4E,EAA5EA,YAAaoF,EAA+D,EAA/DA,cAAef,EAAgD,EAAhDA,gBAAiBpE,EAA+B,EAA/BA,SAAUmE,EAAqB,EAArBA,MAAU/E,EAAW,oFAEzF,OACC,yBAAKoC,UAAWC,KAAQyF,WACnB,kBAAC,GAAD,CAAWnH,YAAaA,EAAaoF,cAAeA,EACnDD,gBAAiBd,EAAiBpE,SAAUA,IAC9C,yBAAKwB,UAAWC,KAAQ0F,UAEpBhD,EAAMjB,KAAI,SAAAgB,GAAC,OAAI,kBAAC,GAAD,CAAMsC,KAAMtC,EAAGG,mBAAoBjF,EAAMiF,mBACtD9D,OAAQnB,EAAMmB,OAAQF,SAAUjB,EAAMiB,SAAU+C,IAAKc,EAAEjG,W,oCCVxD6B,GAAWsH,cAJC,SAAC1I,GACtB,OAAOA,EAAM2I,UAAUlD,SAG8B,SAACA,GACtD,OAAOA,EAAMa,QAAO,SAAAd,GAAC,OAAI,QAGhBoD,GAAc,SAAC5I,GACxB,OAAOA,EAAM2I,UAAUrH,UAGduH,GAAqB,SAAC7I,GAC/B,OAAOA,EAAM2I,UAAUjD,iBAGdoD,GAAiB,SAAC9I,GAC3B,OAAOA,EAAM2I,UAAUtH,aAGd0H,GAAgB,SAAC/I,GAC1B,OAAOA,EAAM2I,UAAUtF,YAGd2F,GAAwB,SAAChJ,GAClC,OAAOA,EAAM2I,UAAUhD,oBChBrBsD,G,2MAQFxC,cAAgB,SAACkB,GAAgB,IACtBrG,EAAY,EAAKZ,MAAjBY,SACP,EAAKZ,MAAMwI,aAAavB,EAAYrG,I,mFARnB,IAAD,EACgBb,KAAKC,MAA9BW,EADS,EACTA,YAAaC,EADJ,EACIA,SACpBb,KAAKC,MAAMwI,aAAa7H,EAAaC,K,+BAYvC,OAAO,oCACLb,KAAKC,MAAM2C,WAAa,kBAAC8F,GAAA,EAAD,MAAgB,KACxC,kBAAC,GAAD,CAAOzD,gBAAiBjF,KAAKC,MAAMgF,gBAC/BpE,SAAUb,KAAKC,MAAMY,SAAUD,YAAaZ,KAAKC,MAAMW,YACvDM,SAAUlB,KAAKC,MAAMiB,SAAUE,OAAQpB,KAAKC,MAAMmB,OAClD4D,MAAShF,KAAKC,MAAM+E,MAAQgB,cAAiBhG,KAAKgG,cAClDpD,WAAc5C,KAAKC,MAAM2C,WAAY2C,uBAAwBvF,KAAKC,MAAMsF,uBACxEL,mBAAoBlF,KAAKC,MAAMiF,0B,GAvBd/E,IAAML,WAyCpB6I,gBACXvI,aAZkB,SAAAb,GAClB,MAAO,CACHyF,MAAOrE,GAASpB,GAChBsB,SAAUsH,GAAY5I,GACtB0F,gBAAiBmD,GAAmB7I,GACpCqB,YAAayH,GAAe9I,GAC5BqD,WAAY0F,GAAc/I,GAC1B2F,mBAAoBqD,GAAsBhJ,MAKrB,CAAC6B,OLyCR,SAACK,GAAD,8CAAY,WAAMuB,GAAN,SAAAC,EAAA,sDAC9BuC,EAAmBxC,EAAUvB,EAAQf,IAASU,OAAOwH,KAAKlI,KAAWyE,GADvC,2CAAZ,uDKzCgBjE,SL8Cd,SAACO,GAAD,8CAAY,WAAMuB,GAAN,SAAAC,EAAA,sDAChCuC,EAAmBxC,EAAUvB,EAAQf,IAASQ,SAAS0H,KAAKlI,KAAW0E,GADvC,2CAAZ,uDK9CwBC,iBAAgBoD,aLsBpC,SAACI,EAAMhI,GAAP,8CAAoB,WAAMmC,GAAN,eAAAC,EAAA,6DAC5CD,EAASqC,EAAewD,IACxB7F,EAASsC,GAAoB,IAFe,SAI3B5E,IAASC,SAASkI,EAAMhI,GAJG,OAIxCI,EAJwC,OAK5C+B,EAASsC,GAAoB,IAC7BtC,EAbgC,CAAE3D,KA/DpB,YA+DqC2F,MAajC/D,EAAK0D,QACvB3B,EAZoD,CAAE3D,KA/D5B,wBA+DyD4F,gBAYvDhE,EAAK6H,aAPW,2CAApB,yDKvBbH,CAGbH,I,gDC5CIO,GAAQC,aAAY,SAkBpBC,GAAiBC,aAAU,CAC7BC,KAAM,SADaD,EAhBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC1B,OACI,0BAAMC,SAAUF,GAEPG,aAAY,QAAS,QAAS,CAACC,MAAWT,IAC1CQ,aAAY,WAAY,WAAY,CAACC,MAAWT,GAAO,CAAC1J,KAAM,aAC9DkK,aAAY,KAAM,aAAc,KAAMR,GAAO,CAAC1J,KAAM,YAAa,eACvEgK,GACC,yBAAKhH,UAAWC,KAAQmH,kBAAmBJ,EAA3C,KACA,6BACI,8CA+BLjJ,gBAJS,SAAAb,GAAK,MAAK,CAC9BI,OAAQJ,EAAMK,KAAKD,UAGiB,CAAEoC,MdTrB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAMc,GAAN,iBAAAC,EAAA,sEACzBpB,IAAQE,MAAMC,EAAOC,EAAUC,GADN,OAEd,KAD5BlB,EAD0C,QAElCC,KAAKiC,WACTF,EAASD,MAEL7D,EAAU8B,EAASC,KAAKhC,SAASyK,OAAS,EAC5C1I,EAASC,KAAKhC,SAAS,GACvB,aACF+D,EAAS2G,YAAW,QAAS,CAACC,OAAQ1K,MARA,2CAAjC,wDcSNkB,EApBD,SAAAH,GAKV,OAAGA,EAAMN,OACE,kBAAC,IAAD,CAAUO,GAAI,aAGrB,6BACI,qCACA,kBAAC+I,GAAD,CAAgBK,SAVP,SAACO,GACf5J,EAAM8B,MAAM8H,EAAS7H,MAAO6H,EAAS5H,SAAU4H,EAAS3H,mBChC3DtD,GAAe,CACfkL,aAAa,GA0BFC,GAvBI,WAAmC,IAAlCxK,EAAiC,uDAAzBX,GAAcY,EAAW,uCACjD,OAAOA,EAAOH,MACV,IARoB,sBAShB,OAAO,eACAE,EADP,CAEIuK,aAAa,IAGrB,QACI,OAAOvK,I,mBCjBfX,GAAe,CACfkF,QAAS,CACL,CAAChF,GAAI,EAAGC,KAAM,OAAQC,MAAO,wIAC7B,CAACF,GAAI,EAAGC,KAAM,QAASC,MAAO,wIAC9B,CAACF,GAAG,EAAGC,KAAM,QAASC,MAAO,0IAStBgL,GALQ,WAAmC,IAAlCzK,EAAiC,uDAAzBX,GAAyB,iCAErD,OAAOW,G,oBCEP0K,GAAWC,aAAgB,CAC3BC,YAAaC,KACbC,aAAc/K,KACdmF,QAASuF,GACT9B,UAAWvC,EACX/F,KAAMuD,EACNgG,KAAMmB,KACNC,IAAKR,KAGFS,GAAmBC,OAAOC,sCAAwC/B,KAClEgC,GAAQC,aAAYX,GAAUO,GAAiBK,aAAgBC,QAItEL,OAAOE,MAAQA,GAEAA,UC1BFI,GAAe,SAACjL,GAEzB,OAAO,SAACG,GACJ,OAAO,kBAAC,WAAD,CAAU+K,SAAU,kBAACtC,GAAA,EAAD,OACf,kBAAC5I,EAAcG,MCQ7BgL,GAAmB9K,IAAM+K,MAAK,kBAAM,iCACpCC,GAAmBhL,IAAM+K,MAAK,kBAAM,iCAKpCE,G,4LAGFpL,KAAKC,MAAMoL,kB,+BAIX,OAAKrL,KAAKC,MAAM6J,YAMd,yBAAKzH,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,yBAAKA,UAAU,uBAEf,kBAAC,IAAD,CAAOmB,KAAK,oBACV8H,OAAQP,GAAaI,MAEpB,kBAAC,IAAD,CAAO3H,KAAK,WACb8H,OAAQP,GAAaE,MAErB,kBAAC,IAAD,CAAOzH,KAAK,SAAS8H,OAAS,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAO9H,KAAK,QAAQ8H,OAAS,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAO9H,KAAK,UAAU8H,OAAS,kBAAM,kBAAC,EAAD,SACrC,kBAAC,IAAD,CAAO9H,KAAK,SAAS8H,OAAS,kBAAM,kBAAC,GAAD,SAEpC,kBAAC,IAAD,CAAO9H,KAAK,gBAtBT,kBAACkF,GAAA,EAAD,U,GARKvI,IAAML,WA4CpByL,GAAe5C,aACjB6C,IACApL,aANsB,SAAAb,GAAK,MAAK,CAChCuK,YAAavK,EAAMgL,IAAIT,eAKE,CAAEuB,cJ5CA,kBAAM,SAACrI,GACnBA,EAASD,KACfhC,MAAK,WACZiC,EALqC,CAAC3D,KAnBd,+BI+DTsJ,CAE4ByC,IAU9BK,GARM,SAAAxL,GACnB,OAAO,kBAAC,IAAD,CAAYyL,SAAUC,wBAC3B,kBAAC,IAAD,CAAUhB,MAAOA,IACf,kBAACY,GAAD,SC5DYK,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2DCVFC,IAASV,OAED,kBAAC,GAAD,MAAkBW,SAASC,eAAe,SDyHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtL,MAAK,SAAAuL,GACJA,EAAaC,gBAEdC,OAAM,SAAAnD,GACLoD,QAAQpD,MAAMA,EAAMnK,a,mBExI5BR,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,oBAAoB,gBAAkB,+BAA+B,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,uB,gCCDtO,sCAUe+J,IAPG,SAACzI,GACf,OAAO,6BACG,yBAAKuC,IAAKkK,S,yJCDX1D,EAAc,SAAC2D,GAAD,OAAa,YAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASzD,EAAsB,EAAtBA,MAAWpJ,EAAW,gCAC7E8M,EAAWD,GAAWzD,EAE5B,OACI,yBAAKhH,UAAWC,IAAQ0K,YAAc,KAAOD,EAAWzK,IAAQ+G,MAAQ,KACpE,kBAACsD,EAAD,iBAAaC,EAAW3M,IACtB8M,GAAY,8BAAO1D,MAKpBE,EAAc,SAAC0D,EAAalO,EAAMmO,EAAYC,GAAhC,IAA2ClN,EAA3C,uDAAiD,GAAImN,EAArD,uDAA0D,GAA1D,OACvB,6BACI,kBAAC,IAAD,eAAOH,YAAaA,EACpBlO,KAAMA,EAAMsO,SAAUH,EAAYC,UAAWA,GAAelN,IAFhE,IAE2EmN,K,mBCjB/E1O,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,WAAa,4BAA4B,KAAO,wB,mBCAnGD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,gCCArH,oEAAO,IAAM6K,EAAW,SAAA8D,GAIpB,OAAOA,OAAQC,EAAY,qBAKlBC,EAAmB,SAACC,GAAD,OAAe,SAACH,GAC9C,GAAGA,EAAM5D,OAAS+D,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCV/B/O,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,2NCQ3DC,EAAe,CACX8O,MAAO,CACC,CAAC5O,GAAI,EAAGI,QAAS,mBAAoByO,MAAO,IAC5C,CAAC7O,GAAI,EAAGI,QAAS,qBAAsByO,MAAO,IAElDC,QAAS,KACTjM,OAAQ,IAuCPkM,EAAuB,SAACC,GAAD,MAAe,CAAEzO,KApDpC,WAoDoDyO,aAIxDC,EAAY,SAACpM,GAAD,MAAa,CAACtC,KArDpB,aAqDsCsC,WAK5CqM,EAAiB,SAACvM,GAAD,8CAAY,WAAMuB,GAAN,eAAAC,EAAA,sEACb3B,IAAWC,WAAWE,GADT,OAC9BT,EAD8B,OAElCgC,EAToC,CAAC3D,KApDpB,mBAoD4CuO,QASrC5M,IAFU,2CAAZ,uDAMjBiN,EAAgB,SAACxM,GAAD,8CAAY,WAAMuB,GAAN,eAAAC,EAAA,sEACZ3B,IAAWE,UAAUC,GADT,OAC7BT,EAD6B,OAEjCgC,EAAS+K,EAAU/M,EAASC,OAFK,2CAAZ,uDAMhBS,EAAe,SAACC,GAAD,8CAAY,WAAMqB,GAAN,SAAAC,EAAA,sEACX3B,IAAWI,aAAaC,GADb,OAEA,IAFA,OAEpBV,KAAKiC,YACTF,EAAS+K,EAAUpM,IAHK,2CAAZ,uDAQbyI,IAjES,WAAmC,IAAlC7K,EAAiC,uDAAzBX,EAAcY,EAAW,uCACtD,OAAOA,EAAOH,MACV,IAlBS,WAmBD,IAAI6O,EAAU,CACVpP,GAAI,EACJI,QAASM,EAAOsO,SAChBH,MAAO,GAGX,OAAO,eACIpO,EADX,CAESmO,MAAM,GAAD,mBAAMnO,EAAMmO,OAAZ,CAAmBQ,MAGzC,IA5BiB,mBA6BjB,OAAO,eACI3O,EADX,CACkBqO,QAASpO,EAAOoO,UAGlC,IAhCW,aAiCX,OAAO,eACIrO,EADX,CACkBoC,OAAQnC,EAAOmC,SAGjC,IAvCY,cAwCJ,OAAO,eACIpC,EADX,CAEQmO,MAAOnO,EAAMmO,MAAM7H,QAAO,SAAAkB,GAAC,OAAIA,EAAEjI,IAAMU,EAAO2O,YAE9D,QACQ,OAAO5O,M","file":"static/js/main.6d19ed64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/samurai.6879220b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cHYR\",\"item\":\"Navbar_item__3Icao\",\"active\":\"Navbar_active__21R_N\",\"friendBlock\":\"Navbar_friendBlock__3nzdK\",\"friendsList\":\"Navbar_friendsList__B3B3R\",\"header\":\"Navbar_header__3vbui\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\n\n\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Andrei', image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.F8r-Iy0I4BmUU1v-53mKyQAAAA%26pid%3DApi&f=1'},\n        {id: 2, name: 'Sveta',image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.F8r-Iy0I4BmUU1v-53mKyQAAAA%26pid%3DApi&f=1'},\n        {id: 3, name: 'Alex',image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.F8r-Iy0I4BmUU1v-53mKyQAAAA%26pid%3DApi&f=1'},\n        {id: 4, name: 'Vitalya',image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.F8r-Iy0I4BmUU1v-53mKyQAAAA%26pid%3DApi&f=1'},\n        {id: 5, name: 'Masha',image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.F8r-Iy0I4BmUU1v-53mKyQAAAA%26pid%3DApi&f=1'},\n        {id: 6, name: 'Jack', image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.F8r-Iy0I4BmUU1v-53mKyQAAAA%26pid%3DApi&f=1'}\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your IT?'},\n        {id: 3, message: 'Yo'}    \n    ]\n}\n\n\nconst dialogsReducer = (state = initialState, action) => {\n    \n    switch(action.type) {\n        case SEND_MESSAGE: \n                let newMessage = {\n                    id: 4, \n                    message: action.newMessageBody\n                };\n                return {\n                    ...state,\n                    messages: [...state.messages, newMessage]\n                };\n                          \n        default: \n                return state;\n    }\n       \n}\n\n\nexport const sendMessage = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\n\n\n\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/friend.769ff971.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.7c60c684.svg\";","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n   \n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\n    return <Component {...this.props} />\n        }\n    }\n    \n     let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","import * as axios from 'axios';\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"6805cea5-f6b1-496c-b7e9-c9391c11085f\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 12) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response => response.data);\n    },\n    \n    unfollow(id) {\n        return instance.delete(`follow/${id}`)\n        .then(response => response.data);\n    },\n    follow(id) {\n        return instance.post(`follow/${id}`)\n        .then(response => response.data);\n    }\n    \n\n}\n\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`profile/${id}`)\n        .then(response => response.data);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\n\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n        .then(response => response.data);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n","import React from 'react';\nimport classes from './Header.module.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst Header = (props) => {\n    return(\n        <header className={classes.header}>\n            <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F9%2F9d%2FSwift_logo.svg%2F853px-Swift_logo.svg.png&f=1&nofb=1\"></img>\n        <div className={classes.loginBlock}>\n            { props.isAuth \n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n            :  <NavLink to={'/login'}>Login</NavLink> }\n        </div>\n        </header>\n    )\n}\n\nexport default Header;","import { authAPI } from '../components/api/api';\nimport { stopSubmit } from 'redux-form'\n\n\nconst SET_USER_DATA = '/react-socialNetwork/auth/SET-USER-DATA';\n\n\nlet initialState = {\n        id: null,\n        email: null,\n        login: null,\n        isFetching: false,\n        isAuth: false\n};\n\n const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_USER_DATA: \n                return {\n                        ...state,\n                        ...action.payload\n                        //isAuth: true\n                 }\n        \n        default:\n                return state;\n        \n    }\n        \n}\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA, payload:\n         { id, email, login, isAuth } });\n\nexport const getAuthUserData = () => async(dispatch) => {\n        \n        let response = await authAPI.me();\n                if(response.resultCode === 0) {\n                        let {id, email, login} = response.data;\n                        dispatch(setAuthUserData(id, email, login, true));\n                }\n  \n}\n\n\nexport const login = (email, password, rememberMe) => async(dispatch) => {\n        let response = await authAPI.login(email, password, rememberMe);\n        if(response.data.resultCode === 0) {\n                dispatch(getAuthUserData());\n        } else  {\n                let message = response.data.messages.length > 0\n                ? response.data.messages[0]\n                : \"Some error\";\n                dispatch(stopSubmit(\"login\", {_error: message}));\n        }\n      \n}\n\nexport const logout = () => async(dispatch) => {\n        let response = await authAPI.logout();\n                if(response.data.resultCode === 0) {\n                        dispatch(setAuthUserData(null, null, null, false));\n                }\n       \n}\n\nexport default authReducer;","import React from 'react';\nimport {connect} from 'react-redux';\nimport Header from './Header';\nimport { logout } from '../../redux/authReducer';\n\n\n\n\nclass HeaderContainer extends React.Component {\n    \n\n\n    render() {\n        return (\n            <Header {...this.props} />\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login\n\n    }\n}\n\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react'\nimport classes from './News.module.scss'\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from 'react'\nimport classes from './Music.module.scss'\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\nimport classes from './Friends.module.scss';\nimport {NavLink} from 'react-router-dom';\nimport friend from '../../../assets/images/friend.png'\n\nconst Friends = props => {\n    let path = \"/friends/\" + props.id;\n    return (\n        <div className={classes.friend}>\n            \n        <NavLink to={path} className={classes.friendItem}>\n            <img className={classes.icon} src={friend}/>\n            <span>{props.name}</span>\n        </NavLink>\n    </div>\n    )\n}\nexport default Friends;","import React from 'react'\nimport classes from './Navbar.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport Friends from './Friends/Friends'\nimport NavbarContainer from './NavbarContainer'\n\nconst Navbar = props => {\n  \n  let friendsElement = props.friends.map((friend, index) => {\n    return (\n      <Friends\n       key={index}\n       id={friend.id}\n       image={friend.image}\n       name={friend.name}\n       />\n    )\n  });\n  \n\n    return(\n        <nav> \n          <div className={classes.nav}>\n            <NavLink className={classes.item} activeClassName={classes.active} to='/profile'><i className=\"fas fa-user\"></i>Profile</NavLink>\n            <NavLink className={classes.item} activeClassName={classes.active} to='/dialogs'><i className=\"fas fa-comments\"></i>Messages</NavLink>\n            <NavLink className={classes.item} activeClassName={classes.active} to='/users'><i className=\"fas fa-user-friends\"></i>Users</NavLink>\n            <NavLink className={classes.item} activeClassName={classes.active} to='/news'><i className=\"fas fa-rss\"></i>News</NavLink>\n            <NavLink className={classes.item} activeClassName={classes.active} to='/musics'><i className=\"fas fa-music\"></i>Music</NavLink>\n            <NavLink className={classes.item} activeClassName={classes.active} to='/settings'><i className=\"fas fa-cog\"></i>Settings</NavLink>\n           <div className={classes.friendBlock}>\n           <h1 className={classes.header}>Friends</h1>\n            <div className={classes.friendsList}>\n              { friendsElement }\n            </div>\n            </div>\n          </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport Navbar from './Navbar';\nimport {connect} from 'react-redux'\n\n// const NavbarContainer = () => {\n    \n\n//     return <StoreContext.Consumer>\n//              { (store) => {\n//                 return  <Navbar friends={store.getState().sidebar.friends} />\n// }}\n//         </StoreContext.Consumer>\n    \n// }\n\nlet mapStateToProps = (state) => {\n        return {\n             friends: state.sidebar.friends\n        }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n        return {}\n}\n\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\nexport default NavbarContainer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n    if(u[objPropName] === itemId) {\n        return {...u, ...newObjProps}\n    }\n    return u;\n});\n}","import { usersAPI } from '../components/api/api';\nimport {updateObjectInArray} from '../utils/object-helper'\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROCESS = 'TOGGLE-IS-FOLLOWING-PROCESS';\n\n\nlet initialState = {\n    users: [],\n    pageSize: 12,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProcess: []\n         \n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW: \n           return{\n                ...state, \n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n                // users: state.users.map(u => {\n                //     if(u.id === action.userId) {\n                //         return {...u, followed: true}\n                //     }\n                //     return u;\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            }\n        case SET_USERS: {\n            return {...state, users: [...action.users] }\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount }\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching }\n        }\n        case TOGGLE_IS_FOLLOWING_PROCESS: {\n            return {...state, followingInProcess: action.isFetching \n                ? [...state.followingInProcess, action.userId] \n                : [state.followingInProcess.filter(id => id != action.userId)]\n                }\n        }\n            \n        default:\n            return state;\n    }\n   \n}\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount});\nexport const setToggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProcess = (isFetching,userId) => ({ type: TOGGLE_IS_FOLLOWING_PROCESS, isFetching,userId});\n\n\nexport const requestUsers = (page, pageSize) => async(dispatch) => {\n    dispatch(setCurrentPage(page));\n    dispatch(setToggleIsFetching(true));\n\n    let data = await usersAPI.getUsers(page, pageSize)\n    dispatch(setToggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n}\n\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProcess(true, userId));\n    let data = await apiMethod(userId);\n     if (data.resultCode === 0) {\n         dispatch(actionCreator(userId));\n     }\n     dispatch(toggleFollowingProcess(false, userId));\n}\n\nexport const follow = (userId) => async(dispatch) => {\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n}\n\n\nexport const unfollow = (userId) => async(dispatch) =>  {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n }\n  \n\nexport default usersReducer;","import React, {useState} from 'react';\nimport classes from \"./Paginator.module.css\";\n import cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return (\n    <div className={classes.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [classes.selectedPage]: currentPage === p\n                }, classes.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n    )\n}\n\nexport default Paginator;\n\n\n    ","import React from 'react'\nimport classes from './Users.module.scss'\nimport userPhoto from '../../assets/images/samurai.png';\nimport {NavLink} from 'react-router-dom';\nimport Paginator from '../common/Paginator/Paginator';\n\n\n\nconst User = ({user, followingInProcess, unfollow, follow}) => {\n \n   return  (\n    <div className={classes.user}>\n                \n                    \n                        <NavLink to={'/profile/' + user.id} className={classes.size}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} \n                        className={classes.photo}/>\n                        </NavLink>\n                                     \n                        <span>{user.name}</span>\n                        <span>{user.status}</span>\n                                      \n                        <div><i className=\"fas fa-globe\"></i>{'u.location.country'}, {'u.location.city'}</div>\n                        \n\n                        <div className={classes.buttonContainer}>\n            { user.followed \n            ?  <button disabled={followingInProcess.some(id => id === user.id)} \n            onClick={() => {unfollow(user.id);\n              }}>Follow</button> \n\n            :  <button disabled={followingInProcess.some(id => id === user.id)} \n            onClick={() => {follow(user.id);\n              }}>Unfollow</button> }\n                    </div>\n                    \n                \n            </div>\n            \n    )\n  }\n\n\nexport default User;","import React from 'react'\nimport classes from './Users.module.scss'\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\n\n\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\n\n   return  (\n    <div className={classes.container}>\n         <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n          totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div className={classes.usergrid}>\n            {\n            users.map(u => <User user={u} followingInProcess={props.followingInProcess}\n              follow={props.follow} unfollow={props.unfollow} key={u.id}/> \n         \n            )}\n            </div>\n        </div>\n    )\n  }\n\n\nexport default Users;","import { createSelector } from 'reselect'\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n});\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProcess = (state) => {\n    return state.usersPage.followingInProcess;\n}\n\n\n\n\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {follow, unfollow, setCurrentPage, requestUsers} from '../../redux/usersReducer'\nimport Users from './Users'\nimport Preloader from '../common/Preloader/Preloader'\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\nimport {compose} from 'redux';\nimport { getPageSize, getUsers, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProcess } from '../../redux/users.selectors'\nimport { getFormAsyncErrors } from 'redux-form'\n\n\nclass UsersContainer extends React.Component {\n    \n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize);\n                \n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize);\n               \n    }\n  \n\nrender() {\n      return <>\n      { this.props.isFetching ? <Preloader /> : null } \n        <Users totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize} currentPage={this.props.currentPage}\n            unfollow={this.props.unfollow} follow={this.props.follow}\n            users = {this.props.users}  onPageChanged = {this.onPageChanged}\n            isFetching = {this.props.isFetching} toggleFollowingProcess={this.props.toggleFollowingProcess}\n            followingInProcess={this.props.followingInProcess} \n            /> \n    </>\n}\n}\n\n\nlet mapStateToProps = state => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProcess: getFollowingInProcess(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, requestUsers})\n    //withAuthRedirect\n)(UsersContainer);\n\n\n\n// let mapDispatchToProps = dispatch => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPagesAC(pageNumber));\n//         },\n//         setTotalUsersCount: (count) => {\n//             dispatch(setTotalUsersCountAC(count));\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(setToggleIsFetchingAC(isFetching));\n//         }\n\n//     }\n// }\n\n\n\n\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport classes from '../common/FormsControls/FormsControls.module.scss'\nimport { FormControl, createField } from '../common/FormsControls/FormsControls'\nimport { required } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/authReducer'\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst Input = FormControl('input');\n\nconst LoginForm = ({handleSubmit, error}) => {\n        return (\n            <form onSubmit={handleSubmit}>\n                \n                    {createField(\"Email\", \"email\", [required], Input)}\n                    {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n                    {createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, 'remember me')}\n              {error &&\n                <div className={classes.formSummaryError}>{error} </div> }\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ \n    form: 'login'\n  })(LoginForm)\n\n\nconst Login = props => {\n    const onSubmit = (formData) => {\n       props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if(props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case INITIALIZED_SUCCESS: \n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n   let promise = dispatch(getAuthUserData());\n   promise.then(() => {\n    dispatch(initializedSuccess());\n   })\n  \n}\n\nexport default appReducer;\n\n","let initialState = {\n    friends: [\n        {id: 1, name: 'Alex', image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F591093476%2Fbird_400x400.jpg&f=1&nofb=1'},\n        {id: 2, name: 'Sveta', image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F591093476%2Fbird_400x400.jpg&f=1&nofb=1'},\n        {id:3, name: 'Masha', image: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F591093476%2Fbird_400x400.jpg&f=1&nofb=1'} \n      ]\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n    \n    return state;\n}\n\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport profileReducer from './profileReducer'\nimport dialogsReducer from './dialogsReducer'\nimport sidebarReducer from './sidebarReducer'\nimport usersReducer from './usersReducer'\nimport authReducer from './authReducer'\nimport thunkMiddleware from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from './appReducer'\n\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","import React, {Suspense} from 'react'\nimport Preloader from '../components/common/Preloader/Preloader'\n\nexport const withSuspense = (Component) => {\n    \n    return (props) => {\n        return <Suspense fallback={<Preloader />}> \n                    <Component {...props} />\n                </Suspense>\n    }\n}","import React from 'react'\nimport './App.scss'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport {HashRouter, Route, withRouter} from 'react-router-dom'\nimport NavbarContainer from './components/Navbar/NavbarContainer'\nimport UsersContainer from './components/Users/UsersContainer'\nimport LoginPage from './components/Login/Login'\nimport { initializeApp } from './redux/appReducer'\nimport {connect, Provider} from 'react-redux'\nimport {compose} from 'redux'\nimport Preloader from './components/common/Preloader/Preloader'\nimport store from './redux/redux-store'\nimport { withSuspense } from './hoc/withSuspense'\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import ('./components/Profile/ProfileContainer'));\n\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n}\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n    \n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <NavbarContainer />\n       \n        <div className=\"app-wrapper-content\">\n          \n        <Route path=\"/profile/:userId?\" \n          render={withSuspense(ProfileContainer)}/>\n\n           <Route path=\"/dialogs\" \n          render={withSuspense(DialogsContainer)} />\n\n          <Route path=\"/users\" render={ () => <UsersContainer /> } />\n          <Route path=\"/news\" render={ () => <News /> } />\n          <Route path=\"/musics\" render={ () => <Music /> }/>\n          <Route path=\"/login\" render={ () => <LoginPage /> }/>\n\n          <Route path=\"/settings\" />\n          \n        </div>\n       \n      </div>\n    \n   );\n  }\n}\n\nconst mapStateToProps = state => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose (\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\n  const SamuraiJSApp = props => {\n    return <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  }\n\n  export default SamuraiJSApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n \n    ReactDOM.render(\n        \n            <SamuraiJSApp />, document.getElementById('root'));\n    \n\n    \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__a50dK\",\"usergrid\":\"Users_usergrid__2cFmA\",\"user\":\"Users_user__1d1r4\",\"buttonContainer\":\"Users_buttonContainer__y9vCy\",\"pages\":\"Users_pages__2uVyp\",\"size\":\"Users_size__1nmXs\",\"photo\":\"Users_photo__1H5VH\"};","import React from 'react';\nimport preloader from '../../../assets/images/preloader.svg';\n\nconst Preloader = (props) => {\n    return <div> \n              <img src={preloader} />\n          </div>\n    \n}\n\nexport default Preloader;","import React from 'react'\nimport classes from './FormsControls.module.scss'\nimport { Field, reduxForm } from 'redux-form'\n\nexport const FormControl = (Element) => ({input, meta: {touched, error}, ...props}) => {\n    const hasError = touched && error;\n    \n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : '')}>\n            <Element {...input} {...props} />\n            { hasError && <span>{error}</span> }\n        </div>\n    )\n}\n\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => (\n    <div>\n        <Field placeholder={placeholder}\n        name={name} validate={validators} component={component} {...props} /> {text}\n </div>\n)\n    \n\n\n// export const Textarea = ({input, meta, ...props}) => {\n//     const hasError = meta.touched && meta.error;\n    \n//     return (\n//         <div className={classes.formControl + \" \" + (hasError ? classes.error : '')}>\n//             <textarea {...input} {...props} />\n//             { hasError && <span>{'some error'}</span> }\n//         </div>\n//     )\n// }\n\n\n// export const Input = ({input, meta, ...props}) => {\n//     const hasError = meta.touched && meta.error;\n    \n//     return (\n//         <div className={classes.formControl + \" \" + (hasError ? classes.error : '')}>\n//             <input {...input} {...props} />\n//             { hasError && <span>{'some error'}</span> }\n//         </div>\n//     )\n// }\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"error\":\"FormsControls_error__1QSyu\",\"formSummaryError\":\"FormsControls_formSummaryError__Wift6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friends_friend__2EO5C\",\"friendItem\":\"Friends_friendItem__QEJuf\",\"icon\":\"Friends_icon__2ybH4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","\nexport const required = value => {\n    // if(value)\n    // return 'error message';\n    // return undefined;\n    return value ? undefined : 'Field is required';\n}\n\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\n   return undefined;\n    //return (value && value.length > 30) ? 'Max length is 30 symbols' : undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"loginBlock\":\"Header_loginBlock__3g_eP\"};","import { profileAPI } from '../components/api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\n\n\n\nlet initialState = {\n        posts: [\n                {id: 1, message: 'Hi, how are you?', likes: 15},\n                {id: 2, message: 'I go to the market', likes: 8}\n            ],\n            profile: null,\n            status: ''\n};\n\n const profileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_POST: \n                let newPost = {\n                    id: 5,\n                    message: action.postText,\n                    likes: 0\n                };\n                \n                return {\n                        ...state,\n                         posts: [...state.posts, newPost]\n                 };\n        \n        case SET_USER_PROFILE: \n        return {\n                ...state, profile: action.profile\n        }\n\n        case SET_STATUS: \n        return {\n                ...state, status: action.status\n        }\n        \n        case DELETE_POST:\n                return {\n                        ...state, \n                        posts: state.posts.filter(p => p.id != action.postId)\n                }\n        default:\n                return state;\n        \n    }\n        \n}\n\nexport const addPostActionCreator = (postText) => ({ type: ADD_POST, postText });\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\n\nexport const getUserProfile = (userId) => async(dispatch) => {\n        let response = await profileAPI.getProfile(userId);\n        dispatch(setUserProfile(response));\n}\n\n\nexport const getUserStatus = (userId) => async(dispatch) => {\n        let response = await profileAPI.getStatus(userId);\n        dispatch(setStatus(response.data));\n}\n\n\nexport const updateStatus = (status) => async(dispatch) => {\n        let response = await profileAPI.updateStatus(status);\n        if(response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n        }\n}\n\n\nexport default profileReducer;"],"sourceRoot":""}